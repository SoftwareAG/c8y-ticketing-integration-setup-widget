swagger: "2.0"
info:
  title: "Ticketing Integration Microservice for Cumulocity IoT"
  description: "Integrate Ticketing Platform with Cumulocity IoT"
  version: "1.0.0"
paths:
  /tickets:
    get:
      summary: "Get all tickets"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
        - name: pageSize
          in: query
          description: "Number of tickets to be fetched"
          required: false
          type: integer
      responses:
        "200":
          description: "Success response"
          schema:
            type: "object"
            properties:
              records:
                type: "array"
                description: "Ticket records."
                items: 
                  properties:
                    id:
                      type: "string"
                      example: "1000"
                    name:
                      type: "string"
                      example: "Test ticket"
                    description:
                      type: "string"
                      example: "Test ticket description"
                    status:
                      type: "string"
                      example: "Open"
                    priority:
                      type: "string"
                      example: "Urgent"
                    owner:
                      type: "string"
                      example: "Kalpshekhar Gupta"
                    dateCreated:
                      type: "string"
                      example: "2022-01-01T11:10:099Z"
                    dateModified:
                      type: "string"
                      example: "2022-01-02T13:15:102Z"
    post:
      summary: "Create new ticket"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "New ticket body."
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
                example: "Test ticket"
              description:
                type: "string"
                example: "Test ticket description"
              alarmSeverity:
                type: "string"
                example: "CRITICAL or MAJOR or MINOR or WARNING"
      responses:
        "200":
          description: "Sucessfully created."
          schema:
            type: "object"
            properties:
              record:
                type: "object"
                properties:
                  id:
                    type: string
                    example: "1000"
        "201":
          description: "Sucessfully created."
          schema:
            type: "object"
            properties:
              record:
                type: "object"
                properties:
                  id:
                    type: string
                    example: "1000"
  /tickets/{id}/comments:
    get:
      summary: "Get ticket comments by ticket id"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
      - name: "id"
        in: "path"
        description: "Ticket id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful response"
          schema:
            type: "object"
            properties:
              records:
                type: "array"
                description: "Ticket comments."
                items:
                  properties:
                    description:
                      type: "string"
                      example: "Test comment"
                    dateCreated:
                      type: "string"
                      example: "2022-01-18T15:01:000Z"
        
        